import React, { useState, useEffect } from 'react';
import './App.css';

const App = () => {
  const [step, setStep] = useState('register');
  const [formData, setFormData] = useState({
    lastName: '',
    firstName: '',
    middleName: '',
    birthDate: '',
    phone: '',
    email: '',
  });

  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
    if (window.Telegram && window.Telegram.WebApp) {
      window.Telegram.WebApp.ready();
      window.Telegram.WebApp.expand();
    }
  }, []);

  const carCategories = [
    { name: '–°–µ–¥–∞–Ω', icon: 'üöó' },
    { name: '–•—ç—Ç—á–±–µ–∫', icon: 'üöô' },
    { name: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª', icon: 'üöê' },
    { name: '–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫', icon: 'üöô' },
    { name: '–ö—Ä–æ—Å—Å–æ–≤–µ—Ä', icon: 'üöô' },
    { name: '–ú–∏–Ω–∏–≤—ç–Ω', icon: 'üöê' },
    { name: '–ö—É–ø–µ', icon: 'üöó' },
    { name: '–ö–∞–±—Ä–∏–æ–ª–µ—Ç', icon: 'üöô' },
  ];

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setStep('menu');
    if (window.Telegram && window.Telegram.WebApp) {
      window.Telegram.WebApp.sendData(JSON.stringify(formData));
    }
  };

  const handleSelectCarClass = (carClass) => {
    if (window.Telegram && window.Telegram.WebApp) {
      window.Telegram.WebApp.sendData(JSON.stringify({ action: 'select_category', category: carClass }));
    }
  };

  return (
    <div className="App">
      <div className="content-overlay">
        {step === 'register' && (
          <div className="register-form">
            <h1>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ CarRent</h1>
            <form onSubmit={handleSubmit}>
              {Object.entries(formData).map(([key, value]) => (
                <div key={key} className="form-group">
                  <label htmlFor={key}>
                    {key === 'lastName' ? '–§–∞–º–∏–ª–∏—è' :
                     key === 'firstName' ? '–ò–º—è' :
                     key === 'middleName' ? '–û—Ç—á–µ—Å—Ç–≤–æ' :
                     key === 'birthDate' ? '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è' :
                     key === 'phone' ? '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞' :
                     'Email'}
                  </label>
                  <input
                    type={key === 'birthDate' ? 'date' : key === 'phone' ? 'tel' : key === 'email' ? 'email' : 'text'}
                    id={key}
                    name={key}
                    value={value}
                    onChange={handleChange}
                    required
                  />
                </div>
              ))}
              <button type="submit" className="submit-btn">
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </button>
            </form>
          </div>
        )}

        {step === 'menu' && (
          <div className="menu">
            <h1>–ú–µ–Ω—é CarShare</h1>
            <button onClick={() => setStep('rentCar')} className="menu-btn">
              –•–æ—á—É –≤–∑—è—Ç—å –º–∞—à–∏–Ω—É –≤ –ø—Ä–æ–∫–∞—Ç
            </button>
            <button onClick={() => setStep('owner')} className="menu-btn">
              –Ø –≤–ª–∞–¥–µ–ª–µ—Ü –∞–≤—Ç–æ–º–æ–±–∏–ª—è
            </button>
          </div>
        )}

        {step === 'rentCar' && (
          <div className="car-classes">
            <h1>–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è</h1>
            <div className="car-grid">
              {carCategories.map(({ name, icon }) => (
                <button key={name} className="car-class-btn" onClick={() => handleSelectCarClass(name)}>
                  <span className="car-icon">{icon}</span>
                  <span>{name}</span>
                </button>
              ))}
            </div>
          </div>
        )}

        {step === 'owner' && (
          <div className="owner-info">
            <h1>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤</h1>
            <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —É—Å–ª—É–≥–∏ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.</p>
            <button onClick={() => setStep('menu')} className="back-btn">
              –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}
      </div>
    </div>
  );
};

export default App;